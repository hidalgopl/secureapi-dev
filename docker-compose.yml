version: '3.4'

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}

services:
  nats:
    image: nats:latest
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.whoami.rule=Host(`nats.secureapi.dev`)"
#      - "traefik.http.routers.whoami.tls.certresolver=myresolver"
    ports:
      - "4222:4222"
    command: "-DV"
#    volumes:
#      - ./config/:/etc/nats
    #command: ["-DV", "--user admin", "--pass secureapigonnakickyourasses"]

  django:
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.django.rule=Host(`secureapi.dev`)"
#      - "traefik.http.routers.django.entrypoints=websecure"
#      - "traefik.http.routers.django.tls.certresolver=myresolver"
#      - "traefik.http.middlewares.test-auth.basicauth.users=admin:$$apr1$$zj4BEnZP$$hgOiZ5OBa23uVe0OLoT3l/"
    build:
      context: ./secureapi_web/
      dockerfile: ./compose/local/django/Dockerfile
    image: secureapi_web_local_django
    depends_on:
      - postgres
    volumes:
      - ./secureapi_web:/app
    env_file:
      - ./secureapi_web/.envs/.local/.django
      - ./secureapi_web/.envs/.local/.postgres
    ports:
      - "8072:8000"
    command: /start

  postgres:
    build:
      context: ./secureapi_web
      dockerfile: ./compose/production/postgres/Dockerfile
    image: secureapi_web_production_postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/backups
    env_file:
      - ./secureapi_web/.envs/.local/.postgres
    ports:
      - "5344:5342"

  test_saver:
    build:
      context: ./test_saver
      dockerfile: Dockerfile
    image: test_saver_local
    env_file:
      - ./test_saver/template.env
    depends_on:
      - nats
      - postgres

  boatswain:
    build:
      network: host
      context: ./secureapi-boatswain
      dockerfile: Dockerfile
    image: boatswain_local
    env_file:
      - ./secureapi-boatswain/template.env
    depends_on:
      - nats
#
#  traefik:
#    image: "traefik:v2.1"
#    container_name: "traefik"
#    command:
#      #- "--log.level=DEBUG"
#      - "--api.insecure=true"
#      - "--providers.docker=true"
#      - "--providers.docker.exposedbydefault=false"
#      - "--entrypoints.web.address=:80"
#      - "--entrypoints.websecure.address=:443"
#      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
#      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
#      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
#      - "--certificatesresolvers.myresolver.acme.email=pawebojanowski@gmail.com"
#      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
#    ports:
#      - "80:8000"
#      - "443:443"
#      - "8080:8080"
#    volumes:
#      - "./letsencrypt:/letsencrypt"
#      - "/var/run/docker.sock:/var/run/docker.sock:ro"
